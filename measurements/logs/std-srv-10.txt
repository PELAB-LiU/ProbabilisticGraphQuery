
/**
 * Imports for stochastic queries
 */
import "http://www.eclipse.org/emf/2002/Ecore"
import "http://www.example.org/tracemodel"

import java reliability.mdd.COLLECT;
import java reliability.mdd.OR;
import java reliability.mdd.NOT;
import java reliability.intreface.D;
import java hu.bme.mit.delta.mdd.MddHandle; 
import java reliability.mdd.MddHandleCollection;
import java reliability.events.Event;

/**
 * Imports for weight functions
 */
import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper

/**
 * Imports from the original model
 */
import "http://www.example.org/surveillance"
import "http://www.eclipse.org/emf/2002/Ecore"

import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.Coordinate
import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper
/**
 * User defined patterns
 */
 pattern targetToShoot(trg:UnidentifiedObject,probability:EDouble)
{
	find targettableObject(trg,probability);
}
 pattern targettableObject(trg:UnidentifiedObject,confidence:EDouble)
{
	UnidentifiedObject.confidence(trg,confidence);
	UnidentifiedObject.speed(trg,speed);
	check(confidence >
	 0.65);
	check(SurveillanceHelper.spd30
	(speed)
	);
}
 pattern gunshot(from:Drone,to:UnidentifiedObject,probability:java ^java.lang.Double)
{
	neg find killed(to);
	Drone.position(from,dp);
	find targettableObject(to,_);
	UnidentifiedObject.position(to,tp);
	check(SurveillanceHelper.dst1000
	(dp,tp)
	);
	UnidentifiedObject.speed(to,speed);
	UnidentifiedObject.confidence(to,confidence);
	probability==eval(SurveillanceHelper.shotProbability
	(dp,tp,speed,confidence)
	);
}
 pattern killed(object:UnidentifiedObject)
{
	Shot.probability(s,p);
	Shot.at(s,object);
	check(p >
	 0.95);
}
 pattern attempt(from:Drone,to:UnidentifiedObject,event: java Event){
	find ua_attempt(from,to,_);
	event == OR find ua_attempt(from,to,#_);
}
private pattern ua_attempt(from:Drone,to:UnidentifiedObject,event: java Event)
{
	find use_gunshot(from,to,_,event0);
	find use_targetToShoot(to,_,event1);
	event==eval(D.AND(event0,event1));
}
 pattern elimination(target:UnidentifiedObject,probability:java ^java.lang.Double)
{
	collectionOf_probability == COLLECT find attempt(_,target,#_);
	TraceModel.probabilities(_,internal_probabilities);
	//Cast: to avoid a false error indication in eclipse
	probability == eval(D.WeightCollection(collectionOf_probability as MddHandleCollection, [cnt | hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper.P(cnt)], internal_probabilities));
}

/**
 * Event require pattern
 */
pattern BERequiredName1(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName1_many(arg1,name, index, _);
	probability == max find BERequiredName1_many(arg1,name, index, #_);
}

pattern BERequiredName1_many(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find targetToShoot(arg1,probability);
	name == "targetToShoot";
	index == 1;
}
pattern BERequiredName2(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName2_many(arg1, arg2,name, index, _);
	probability == max find BERequiredName2_many(arg1, arg2,name, index, #_);
}

pattern BERequiredName2_many(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find gunshot(arg1,arg2,probability);
	name == "gunshot";
	index == 1;
}

private pattern use_targetToShoot(trg:UnidentifiedObject,probability:EDouble, event: java Event){
	//find targetToShoot(trg,probability);
	find HandleOf1(trg,"targetToShoot",event);
	find BETrace1(trg,"targetToShoot",1,trace);
	Trace.probability(trace,probability);
	 
}
private pattern use_gunshot(from:Drone,to:UnidentifiedObject,probability:java ^java.lang.Double, event: java Event){
	//find gunshot(from,to,probability);
	find HandleOf2(from,to,"gunshot",event);
	find BETrace2(from,to,"gunshot",1,trace);
	Trace.probability(trace,probability);
	 
}

/**
 * Interface queries for event management
 */
pattern BETrace1(arg1:EObject, name: EString, index: EInt, trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion1(arg1:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName1(arg1, name, to, probability);
	neg find BETrace1(arg1, name, _, _);
	from == 0;
} or {
	find BERequiredName1(arg1, name, to, probability);
	find BETrace1(arg1, name, _, _);
	from == max find BETrace1(arg1, name, #_, _);
	check(to > from);
}

pattern Removal1(trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	neg find BERequiredName1(arg1, name, _, _);
} or {
	find BERequiredName1(arg1, name, multiplicity, _);
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update1(trace: Trace1, probability: java Double){
	find BERequiredName1(arg1, name, multiplicity, probability);
	find BETrace1(arg1, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf1(arg1:EObject, name: EString, event: Handle){
	find BETrace1(arg1, name, _, trace);
	Trace.event(trace, event);
}
pattern BETrace2(arg1:EObject, arg2:EObject, name: EString, index: EInt, trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion2(arg1:EObject, arg2:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName2(arg1, arg2, name, to, probability);
	neg find BETrace2(arg1, arg2, name, _, _);
	from == 0;
} or {
	find BERequiredName2(arg1, arg2, name, to, probability);
	find BETrace2(arg1, arg2, name, _, _);
	from == max find BETrace2(arg1, arg2, name, #_, _);
	check(to > from);
}

pattern Removal2(trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	neg find BERequiredName2(arg1, arg2, name, _, _);
} or {
	find BERequiredName2(arg1, arg2, name, multiplicity, _);
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update2(trace: Trace2, probability: java Double){
	find BERequiredName2(arg1, arg2, name, multiplicity, probability);
	find BETrace2(arg1, arg2, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf2(arg1:EObject, arg2:EObject, name: EString, event: Handle){
	find BETrace2(arg1, arg2, name, _, trace);
	Trace.event(trace, event);
}



[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - Queries /**
 * Imports for stochastic queries
 */
import "http://www.eclipse.org/emf/2002/Ecore"
import "http://www.example.org/tracemodel"

import java reliability.mdd.COLLECT;
import java reliability.mdd.OR;
import java reliability.mdd.NOT;
import java reliability.intreface.D;
import java hu.bme.mit.delta.mdd.MddHandle; 
import java reliability.mdd.MddHandleCollection;
import java reliability.events.Event;

/**
 * Imports for weight functions
 */
import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper

/**
 * Imports from the original model
 */
import "http://www.example.org/surveillance"
import "http://www.eclipse.org/emf/2002/Ecore"

import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.Coordinate
import java hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper
/**
 * User defined patterns
 */
 pattern targetToShoot(trg:UnidentifiedObject,probability:EDouble)
{
	find targettableObject(trg,probability);
}
 pattern targettableObject(trg:UnidentifiedObject,confidence:EDouble)
{
	UnidentifiedObject.confidence(trg,confidence);
	UnidentifiedObject.speed(trg,speed);
	check(confidence >
	 0.65);
	check(SurveillanceHelper.spd30
	(speed)
	);
}
 pattern gunshot(from:Drone,to:UnidentifiedObject,probability:java ^java.lang.Double)
{
	neg find killed(to);
	Drone.position(from,dp);
	find targettableObject(to,_);
	UnidentifiedObject.position(to,tp);
	check(SurveillanceHelper.dst1000
	(dp,tp)
	);
	UnidentifiedObject.speed(to,speed);
	UnidentifiedObject.confidence(to,confidence);
	probability==eval(SurveillanceHelper.shotProbability
	(dp,tp,speed,confidence)
	);
}
 pattern killed(object:UnidentifiedObject)
{
	Shot.probability(s,p);
	Shot.at(s,object);
	check(p >
	 0.95);
}
 pattern attempt(from:Drone,to:UnidentifiedObject,event: java Event){
	find ua_attempt(from,to,_);
	event == OR find ua_attempt(from,to,#_);
}
private pattern ua_attempt(from:Drone,to:UnidentifiedObject,event: java Event)
{
	find use_gunshot(from,to,_,event0);
	find use_targetToShoot(to,_,event1);
	event==eval(D.AND(event0,event1));
}
 pattern elimination(target:UnidentifiedObject,probability:java ^java.lang.Double)
{
	collectionOf_probability == COLLECT find attempt(_,target,#_);
	TraceModel.probabilities(_,internal_probabilities);
	//Cast: to avoid a false error indication in eclipse
	probability == eval(D.WeightCollection(collectionOf_probability as MddHandleCollection, [cnt | hu.bme.mit.inf.dslreasoner.domains.surveillance.utilities.SurveillanceHelper.P(cnt)], internal_probabilities));
}

/**
 * Event require pattern
 */
pattern BERequiredName1(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName1_many(arg1,name, index, _);
	probability == max find BERequiredName1_many(arg1,name, index, #_);
}

pattern BERequiredName1_many(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find targetToShoot(arg1,probability);
	name == "targetToShoot";
	index == 1;
}
pattern BERequiredName2(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName2_many(arg1, arg2,name, index, _);
	probability == max find BERequiredName2_many(arg1, arg2,name, index, #_);
}

pattern BERequiredName2_many(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find gunshot(arg1,arg2,probability);
	name == "gunshot";
	index == 1;
}

private pattern use_targetToShoot(trg:UnidentifiedObject,probability:EDouble, event: java Event){
	//find targetToShoot(trg,probability);
	find HandleOf1(trg,"targetToShoot",event);
	find BETrace1(trg,"targetToShoot",1,trace);
	Trace.probability(trace,probability);
	 
}
private pattern use_gunshot(from:Drone,to:UnidentifiedObject,probability:java ^java.lang.Double, event: java Event){
	//find gunshot(from,to,probability);
	find HandleOf2(from,to,"gunshot",event);
	find BETrace2(from,to,"gunshot",1,trace);
	Trace.probability(trace,probability);
	 
}

/**
 * Interface queries for event management
 */
pattern BETrace1(arg1:EObject, name: EString, index: EInt, trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion1(arg1:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName1(arg1, name, to, probability);
	neg find BETrace1(arg1, name, _, _);
	from == 0;
} or {
	find BERequiredName1(arg1, name, to, probability);
	find BETrace1(arg1, name, _, _);
	from == max find BETrace1(arg1, name, #_, _);
	check(to > from);
}

pattern Removal1(trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	neg find BERequiredName1(arg1, name, _, _);
} or {
	find BERequiredName1(arg1, name, multiplicity, _);
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update1(trace: Trace1, probability: java Double){
	find BERequiredName1(arg1, name, multiplicity, probability);
	find BETrace1(arg1, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf1(arg1:EObject, name: EString, event: Handle){
	find BETrace1(arg1, name, _, trace);
	Trace.event(trace, event);
}
pattern BETrace2(arg1:EObject, arg2:EObject, name: EString, index: EInt, trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion2(arg1:EObject, arg2:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName2(arg1, arg2, name, to, probability);
	neg find BETrace2(arg1, arg2, name, _, _);
	from == 0;
} or {
	find BERequiredName2(arg1, arg2, name, to, probability);
	find BETrace2(arg1, arg2, name, _, _);
	from == max find BETrace2(arg1, arg2, name, #_, _);
	check(to > from);
}

pattern Removal2(trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	neg find BERequiredName2(arg1, arg2, name, _, _);
} or {
	find BERequiredName2(arg1, arg2, name, multiplicity, _);
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update2(trace: Trace2, probability: java Double){
	find BERequiredName2(arg1, arg2, name, multiplicity, probability);
	find BETrace2(arg1, arg2, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf2(arg1:EObject, arg2:EObject, name: EString, event: Handle){
	find BETrace2(arg1, arg2, name, _, trace);
	Trace.event(trace, event);
}



[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 0 (1 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 245.02342000000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 398.462545ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 843.212657ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 1 (2 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 61.210567000000005ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 130.411316ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 506.14087ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 2 (3 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 42.548705999999996ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 3 (4 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 55.506992ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 4 (5 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 33.694805ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 5 (6 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 29.565313ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 6 (7 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 36.633682ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 7 (8 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 32.052827ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 8 (9 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 29.470255ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 9 (10 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 32.37888ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 10 (11 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 39.257873ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 11 (12 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 34.435863ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 12 (13 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 29.973062000000002ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 13 (14 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 27.491648ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 14 (15 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 31.306624ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 15 (16 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 26.608484ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 16 (17 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 27.125845ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 17 (18 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 26.135334999999998ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 18 (19 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 30.000216ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 19 (20 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 26.121787ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 20 (21 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 30.654331ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
prefix,size,run,iteration,incremental.total[ms],incremental.result,incremental.sync[ms],incremental.prop[ms],incremental.timeout,standalone.total[ms],standalone.result,standalone.sync[ms],standalone.prop[ms],standalone.timeout,problog.total[ms],problog.result,problog.trafo[ms],problog.evaluation[ms],problog.timeout,storm.total[ms],storm.result,storm.trafo[ms],storm.evaluation[ms],storm.timeout,incremental.healthy,standalone.healthy,storm.healthy,problog.exitcode
SRV,10,0,0,245.02342000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",41.77986,71.90424499999999,false,,,,,,398.462545,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",8.138844,390.323701,false,843.212657,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",24.353379,818.859278,false,true,,true,0
SRV,10,1,0,61.210567000000005,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",7.711196,11.439112999999999,false,,,,,,130.411316,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.928631,128.482685,false,506.14087,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",17.664202,488.476668,false,true,,true,0
SRV,10,2,0,42.548705999999996,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",5.349581,6.03958,false,,,,,,,,,,,,,,,,true,,,
SRV,10,3,0,55.506992,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",6.448,11.156454,false,,,,,,,,,,,,,,,,true,,,
SRV,10,4,0,33.694805,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",4.298374,6.106901,false,,,,,,,,,,,,,,,,true,,,
SRV,10,5,0,29.565313,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",4.449094,4.351850000000001,false,,,,,,,,,,,,,,,,true,,,
SRV,10,6,0,36.633682,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",4.161118,6.238985,false,,,,,,,,,,,,,,,,true,,,
SRV,10,7,0,32.052827,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",4.052241,4.807379,false,,,,,,,,,,,,,,,,true,,,
SRV,10,8,0,29.470255,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",3.938253,4.23663,false,,,,,,,,,,,,,,,,true,,,
SRV,10,9,0,32.37888,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",3.9859780000000002,3.9880329999999997,false,,,,,,,,,,,,,,,,true,,,
SRV,10,10,0,39.257873,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.261063,6.277989,false,,,,,,,,,,,,,,,,true,,,
SRV,10,11,0,34.435863,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",4.078327,4.836887,false,,,,,,,,,,,,,,,,true,,,
SRV,10,12,0,29.973062000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",4.869193,4.214183,false,,,,,,,,,,,,,,,,true,,,
SRV,10,13,0,27.491648,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",3.684268,4.0934989999999996,false,,,,,,,,,,,,,,,,true,,,
SRV,10,14,0,31.306624,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",4.360679,3.6253960000000003,false,,,,,,,,,,,,,,,,true,,,
SRV,10,15,0,26.608484,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",3.4462689999999996,3.559065,false,,,,,,,,,,,,,,,,true,,,
SRV,10,16,0,27.125845,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.391075,3.157085,false,,,,,,,,,,,,,,,,true,,,
SRV,10,17,0,26.135334999999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",3.344207,3.702857,false,,,,,,,,,,,,,,,,true,,,
SRV,10,18,0,30.000216,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.632678,3.48017,false,,,,,,,,,,,,,,,,true,,,
SRV,10,19,0,26.121787,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",3.4166469999999998,3.281137,false,,,,,,,,,,,,,,,,true,,,
SRV,10,20,0,30.654331,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",5.024853,4.683179,false,,,,,,,,,,,,,,,,true,,,
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 0 (1 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.102432ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 130.61177ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 1041.6906720000002ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 1 (2 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 24.696054ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 123.276105ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 866.732213ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 2 (3 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.572116ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 123.186594ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 500.933166ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 3 (4 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.842985000000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 127.23921ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 536.692594ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 4 (5 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.400886999999997ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 123.075125ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 520.876252ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 5 (6 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 25.570418ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 120.185209ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 536.031583ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 6 (7 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.44748ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 125.672791ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 859.0431459999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 7 (8 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.446418ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.285402ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 541.691314ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 8 (9 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 25.099859000000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 119.99577599999999ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 509.231248ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 9 (10 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.93802ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 114.31115ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 555.404766ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 10 (11 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.278021ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 121.732545ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 534.545275ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 11 (12 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.614058ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 119.77162799999999ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 632.9284670000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 12 (13 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 24.811899ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 121.65026700000001ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 554.034481ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 13 (14 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 25.318357ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 116.525191ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 574.69251ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 14 (15 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.311536ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 116.54905000000001ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 550.0295659999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 15 (16 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.771206ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.123775ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 490.478456ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 16 (17 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.379432ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 138.689443ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 577.7698839999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 17 (18 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.432710999999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 130.818981ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 619.6250480000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 18 (19 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 20.106938999999997ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 112.357962ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 510.19004800000005ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 19 (20 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 20.561804ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 119.892626ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 508.198659ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 20 (21 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.967218ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 123.603077ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 517.61216ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 21 (22 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 27.43822ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 152.890366ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 573.77223ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 22 (23 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.876693ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.528221ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 569.9224659999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 23 (24 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.381963ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 117.636602ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 498.621269ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 24 (25 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.68967ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 117.17708999999999ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 556.888173ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 25 (26 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.040505ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 115.364055ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 502.376917ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 26 (27 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 19.68496ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 133.45371ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 560.3420729999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 27 (28 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.922354ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 111.937391ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 526.799884ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 28 (29 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.646471000000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 124.540687ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 578.088563ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 29 (30 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.28157ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 121.816625ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 568.695847ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 30 (31 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 24.645445ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 122.267697ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 506.57729900000004ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 31 (32 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 17.163891ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 168.54237700000002ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 563.2342100000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 32 (33 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.872868999999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.78291ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 552.247056ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 33 (34 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 23.046972ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.97532399999999ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 514.7522829999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 34 (35 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 19.959998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 120.181273ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 527.9962089999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 35 (36 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.124948ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 116.267244ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 489.29486099999997ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 36 (37 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 27.035717ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 175.750019ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 530.013201ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 37 (38 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 20.520866ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 116.414226ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 544.0838580000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 38 (39 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 18.098271ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 118.90546400000001ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 497.39672399999995ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 39 (40 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 18.934677ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 117.24742ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 508.00749400000007ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 40 (41 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 18.857019ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 125.349477ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 516.8554839999999ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 41 (42 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 20.53741ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 160.82183300000003ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 545.585612ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 42 (43 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.821609ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 124.33075500000001ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 565.275616ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 43 (44 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 20.780128ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 119.675031ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 513.306851ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 44 (45 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.134824000000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 121.250425ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 525.5260450000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 45 (46 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 21.483555ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 124.702446ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 551.0479280000001ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 46 (47 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 18.380644ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 138.519056ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 510.91242800000003ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 47 (48 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 22.149611ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 135.98972700000002ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 532.419318ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 48 (49 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 19.278036ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 115.56121ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 508.391358ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 49 (50 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 19
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.viatra.SurveillanceScaleRunner - Viatra completed in 17.6158ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.surveillance.problog.ProblogSurveillanceUtil - ProbLog complete in 117.42081900000001ms with result #6 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.surveillance.storm.StormSurveillanceUtil - Storm complete in 545.521314ms with result #6 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
prefix,size,run,iteration,incremental.total[ms],incremental.result,incremental.sync[ms],incremental.prop[ms],incremental.timeout,standalone.total[ms],standalone.result,standalone.sync[ms],standalone.prop[ms],standalone.timeout,problog.total[ms],problog.result,problog.trafo[ms],problog.evaluation[ms],problog.timeout,storm.total[ms],storm.result,storm.trafo[ms],storm.evaluation[ms],storm.timeout,incremental.healthy,standalone.healthy,storm.healthy,problog.exitcode
SRV,10,0,0,23.102432,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",3.247909,2.815263,false,,,,,,130.61177,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.460769,129.151001,false,1041.6906720000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",534.353834,507.33683800000006,false,true,,true,0
SRV,10,1,0,24.696054,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.964413,2.712062,false,,,,,,123.276105,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.308191,121.96791400000001,false,866.732213,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",22.87931,843.852903,false,true,,true,0
SRV,10,2,0,23.572116,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.0974090000000003,2.6738519999999997,false,,,,,,123.186594,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.745307,121.441287,false,500.933166,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",16.577583,484.355583,false,true,,true,0
SRV,10,3,0,22.842985000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.78368,2.774465,false,,,,,,127.23921,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.4397840000000002,125.79942600000001,false,536.692594,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",19.582277,517.110317,false,true,,true,0
SRV,10,4,0,22.400886999999997,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.7464,2.600557,false,,,,,,123.075125,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.155232,121.919893,false,520.876252,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",17.455237,503.421015,false,true,,true,0
SRV,10,5,0,25.570418,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",3.4228609999999997,2.603477,false,,,,,,120.185209,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",1.5325309999999999,118.652678,false,536.031583,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",17.701683,518.3299,false,true,,true,0
SRV,10,6,0,23.44748,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.127768,2.5654969999999997,false,,,,,,125.672791,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",1.291786,124.381005,false,859.0431459999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",19.997945,839.0452009999999,false,true,,true,0
SRV,10,7,0,21.446418,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.3518820000000003,2.684278,false,,,,,,118.285402,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.207181,117.078221,false,541.691314,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",18.525701,523.165613,false,true,,true,0
SRV,10,8,0,25.099859000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.599312,3.143592,false,,,,,,119.99577599999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.444118,118.55165799999999,false,509.231248,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",16.48122,492.750028,false,true,,true,0
SRV,10,9,0,23.93802,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.2887959999999996,3.007241,false,,,,,,114.31115,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",1.155902,113.155248,false,555.404766,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",18.021083,537.383683,false,true,,true,0
SRV,10,10,0,21.278021,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.785894,2.5294250000000003,false,,,,,,121.732545,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",1.075785,120.65675999999999,false,534.545275,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",16.364439,518.180836,false,true,,true,0
SRV,10,11,0,21.614058,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.860317,2.577699,false,,,,,,119.77162799999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.2667449999999998,118.504883,false,632.9284670000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",18.539861,614.3886060000001,false,true,,true,0
SRV,10,12,0,24.811899,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.565856,2.831725,false,,,,,,121.65026700000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.338897,120.31137,false,554.034481,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",18.510253,535.524228,false,true,,true,0
SRV,10,13,0,25.318357,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.812513,2.653864,false,,,,,,116.525191,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.31516,115.210031,false,574.69251,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",18.498638999999997,556.193871,false,true,,true,0
SRV,10,14,0,22.311536,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.848288,2.749797,false,,,,,,116.54905000000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.3146579999999999,115.23439200000001,false,550.0295659999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",17.278435,532.751131,false,true,,true,0
SRV,10,15,0,21.771206,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.616067,2.5947620000000002,false,,,,,,118.123775,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.113489,117.010286,false,490.478456,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",18.431688,472.046768,false,true,,true,0
SRV,10,16,0,23.379432,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.053931,2.32543,false,,,,,,138.689443,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.099062,137.590381,false,577.7698839999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",21.697914,556.07197,false,true,,true,0
SRV,10,17,0,22.432710999999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.835858,2.2280390000000003,false,,,,,,130.818981,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.236669,129.582312,false,619.6250480000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",19.959515,599.6655330000001,false,true,,true,0
SRV,10,18,0,20.106938999999997,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.406332,2.280529,false,,,,,,112.357962,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",1.199084,111.158878,false,510.19004800000005,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",16.09563,494.094418,false,true,,true,0
SRV,10,19,0,20.561804,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.363542,2.357165,false,,,,,,119.892626,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",1.245264,118.64736199999999,false,508.198659,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",18.841646,489.357013,false,true,,true,0
SRV,10,20,0,21.967218,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.723719,2.644215,false,,,,,,123.603077,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.059022,122.54405499999999,false,517.61216,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",17.293134,500.319026,false,true,,true,0
SRV,10,21,0,27.43822,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.926732,3.092275,false,,,,,,152.890366,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.356158,151.534208,false,573.77223,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",16.65547,557.11676,false,true,,true,0
SRV,10,22,0,21.876693,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.776141,2.302449,false,,,,,,118.528221,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.23292,117.29530100000001,false,569.9224659999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",18.395913,551.5265529999999,false,true,,true,0
SRV,10,23,0,22.381963,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.1012220000000004,2.8692800000000003,false,,,,,,117.636602,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.430482,116.20612,false,498.621269,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",18.896265,479.725004,false,true,,true,0
SRV,10,24,0,21.68967,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.736103,2.16101,false,,,,,,117.17708999999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.0989179999999998,116.07817200000001,false,556.888173,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",17.504222,539.383951,false,true,,true,0
SRV,10,25,0,22.040505,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.722307,1.985222,false,,,,,,115.364055,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.1929649999999998,114.17108999999999,false,502.376917,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",17.083331,485.293586,false,true,,true,0
SRV,10,26,0,19.68496,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.948364,1.969738,false,,,,,,133.45371,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.059395,132.394315,false,560.3420729999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",16.821548,543.5205249999999,false,true,,true,0
SRV,10,27,0,21.922354,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.7255920000000002,2.370663,false,,,,,,111.937391,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.059443,110.877948,false,526.799884,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",20.149586999999997,506.6502970000001,false,true,,true,0
SRV,10,28,0,21.646471000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.870184,1.993625,false,,,,,,124.540687,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.216683,123.324004,false,578.088563,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",17.213518999999998,560.875044,false,true,,true,0
SRV,10,29,0,23.28157,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.28572,2.587796,false,,,,,,121.816625,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.503445,120.31317999999999,false,568.695847,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",17.407365,551.2884819999999,false,true,,true,0
SRV,10,30,0,24.645445,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.492655,3.569494,false,,,,,,122.267697,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.429733,120.83796400000001,false,506.57729900000004,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",17.016115999999997,489.561183,false,true,,true,0
SRV,10,31,0,17.163891,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.115637,1.920787,false,,,,,,168.54237700000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.4427159999999999,167.099661,false,563.2342100000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",18.081457,545.1527530000001,false,true,,true,0
SRV,10,32,0,21.872868999999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.350906,2.1625949999999996,false,,,,,,118.78291,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.167823,117.615087,false,552.247056,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",18.367608999999998,533.879447,false,true,,true,0
SRV,10,33,0,23.046972,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.539091,2.178234,false,,,,,,118.97532399999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.1242,117.851124,false,514.7522829999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",17.163204999999998,497.589078,false,true,,true,0
SRV,10,34,0,19.959998,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	}
	]
}
",2.605614,1.8565,false,,,,,,120.181273,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		}
	]
}
",1.224856,118.956417,false,527.9962089999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",17.356013,510.64019599999995,false,true,,true,0
SRV,10,35,0,21.124948,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.524092,2.219516,false,,,,,,116.267244,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.018764,115.24848,false,489.29486099999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",16.888182,472.406679,false,true,,true,0
SRV,10,36,0,27.035717,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",3.110778,3.094592,false,,,,,,175.750019,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.42428,174.325739,false,530.013201,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",17.307652000000004,512.705549,false,true,,true,0
SRV,10,37,0,20.520866,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.4892130000000003,2.327634,false,,,,,,116.414226,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.196538,115.217688,false,544.0838580000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",18.040100000000002,526.043758,false,true,,true,0
SRV,10,38,0,18.098271,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.1164229999999997,2.012687,false,,,,,,118.90546400000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.0690899999999999,117.83637399999999,false,497.39672399999995,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",16.891896000000003,480.504828,false,true,,true,0
SRV,10,39,0,18.934677,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.289165,1.851753,false,,,,,,117.24742,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",1.01196,116.23546,false,508.00749400000007,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",16.815191000000002,491.19230300000004,false,true,,true,0
SRV,10,40,0,18.857019,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.2341889999999998,2.04255,false,,,,,,125.349477,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.3252680000000001,124.024209,false,516.8554839999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",15.84975,501.00573399999996,false,true,,true,0
SRV,10,41,0,20.53741,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.218359,1.946094,false,,,,,,160.82183300000003,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.201424,159.62040900000002,false,545.585612,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",15.953218,529.632394,false,true,,true,0
SRV,10,42,0,21.821609,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.873815,1.999158,false,,,,,,124.33075500000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",1.162517,123.168238,false,565.275616,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",19.884577,545.391039,false,true,,true,0
SRV,10,43,0,20.780128,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.121651,2.268053,false,,,,,,119.675031,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.156912,118.51811900000001,false,513.306851,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",17.114532999999998,496.19231800000006,false,true,,true,0
SRV,10,44,0,21.134824000000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.168672,2.49566,false,,,,,,121.250425,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.022131,120.22829399999999,false,525.5260450000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",17.360377999999997,508.16566700000004,false,true,,true,0
SRV,10,45,0,21.483555,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	}
	]
}
",2.571397,1.999922,false,,,,,,124.702446,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.270856,123.43159,false,551.0479280000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		}
	]
}
",17.460764,533.587164,false,true,,true,0
SRV,10,46,0,18.380644,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	}
	]
}
",2.137399,2.1468409999999998,false,,,,,,138.519056,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.042029,137.477027,false,510.91242800000003,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",15.354599,495.557829,false,true,,true,0
SRV,10,47,0,22.149611,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.746099,2.334932,false,,,,,,135.98972700000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		}
	]
}
",1.02708,134.962647,false,532.419318,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		}
	]
}
",19.403729000000002,513.015589,false,true,,true,0
SRV,10,48,0,19.278036,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.267522,2.3191599999999997,false,,,,,,115.56121,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		}
	]
}
",1.102887,114.45832300000001,false,508.391358,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",17.358276000000004,491.03308200000004,false,true,,true,0
SRV,10,49,0,17.6158,"{
	""valid"" : true,
	""matches"" : [
	{
		""object"" : ""object5"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object8"",
		""probability"" : 0.9799019999999999
	},
	{
		""object"" : ""object4"",
		""probability"" : 0.9799990199999999
	},
	{
		""object"" : ""object10"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object9"",
		""probability"" : 0.9702
	},
	{
		""object"" : ""object3"",
		""probability"" : 0.9799990199999999
	}
	]
}
",2.3704870000000002,1.6338409999999999,false,,,,,,117.42081900000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",1.220357,116.200462,false,545.521314,"{
	""valid"" : true,
	""matches"" : [
		{
			""object"" : ""object8"",
			""probability"" : 0.979902
		},
		{
			""object"" : ""object4"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object9"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object5"",
			""probability"" : 0.97999902
		},
		{
			""object"" : ""object10"",
			""probability"" : 0.9702
		},
		{
			""object"" : ""object3"",
			""probability"" : 0.97999902
		}
	]
}
",16.52279,528.998524,false,true,,true,0
