
/**
 * Imports for stochastic queries
 */
import "http://www.eclipse.org/emf/2002/Ecore"
import "http://www.example.org/tracemodel"

import java reliability.mdd.COLLECT;
import java reliability.mdd.OR;
import java reliability.mdd.NOT;
import java reliability.intreface.D;
import java hu.bme.mit.delta.mdd.MddHandle; 
import java reliability.mdd.MddHandleCollection;
import java reliability.events.Event;

/**
 * Imports for weight functions
 */
import java hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper

/**
 * Imports from the original model
 */
import "http://www.example.org/smarthome"
import "http://www.eclipse.org/emf/2002/Ecore"

import java hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper
/**
 * User defined patterns
 */
 pattern tempIncr(measurement:Measurement,time:UReal,event: java Event){
	find ua_tempIncr(measurement,time,_);
	event == OR find ua_tempIncr(measurement,time,#_);
}
private pattern ua_tempIncr(measurement:Measurement,time:UReal,event: java Event)
{
	find use_tempIncrBE(_,measurement,_,event0);
	Measurement.time(measurement,time);
	find use_incrementbase(_,event1);
	event==eval(D.AND(event0,event1));
}
 pattern tempIncrBE(m1:Measurement,m2:Measurement,p:java ^java.lang.Double)
{
	Home.measurements(home,m1);
	Home.measurements(home,m2);
	Measurement.time(m1,ti1);
	Measurement.time(m2,ti2);
	Measurement.temp(m1,te1);
	Measurement.temp(m2,te2);
	check(SmarthomeHelper.incrementable
	(te1,ti1,te2,ti2)
	);
	p==eval(SmarthomeHelper.incrementConfidence
	(te1,ti1,te2,ti2)
	);
}
 pattern incrementbase(h:Smarthome)
{
	Smarthome(h);
}
 pattern tempWarning(home:Home,m4:Measurement,event: java Event){
	find ua_tempWarning(home,m4,_);
	event == OR find ua_tempWarning(home,m4,#_);
}
private pattern ua_tempWarning(home:Home,m4:Measurement,event: java Event)
{
	find fourWarning(home,m1,m2,m3,m4);
	find tempIncr(m1,_,event0);
	find tempIncr(m2,_,event1);
	find tempIncr(m3,_,event2);
	find tempIncr(m4,_,event3);
	find use_warningbase(_,event4);
	event==eval(D.AND(event0,event1,event2,event3,event4));
}
 pattern fourWarning(home:Home,m1:Measurement,m2:Measurement,m3:Measurement,m4:Measurement)
{
	find incrementAfter3(m1,m2,m3);
	find incrementAfter2(m3,m4);
	Measurement.time(m1,t1);
	Measurement.time(m4,t4);
	Home.measurements(home,m4);
	check(SmarthomeHelper.within5m
	(t1,t4)
	);
}
 pattern incrementAfter3(m1:Measurement,m2:Measurement,m3:Measurement)
{
	find incrementAfter2(m1,m2);
	find incrementAfter2(m2,m3);
	Measurement.time(m1,t1);
	Measurement.time(m3,t3);
	check(SmarthomeHelper.within5m
	(t1,t3)
	);
}
 pattern incrementAfter2(m1:Measurement,m2:Measurement)
{
	Home.measurements(home,m1);
	Home.measurements(home,m2);
	Measurement.time(m1,t1);
	Measurement.time(m2,t2);
	find use_tempIncrBE(_,m1,_,_);
	find use_tempIncrBE(_,m2,_,_);
	m1!=m2;
	check(SmarthomeHelper.after
	(t1,t2)
	);
	check(SmarthomeHelper.within5m
	(t1,t2)
	);
}
 pattern warningbase(h:Smarthome)
{
	Smarthome(h);
}
 pattern coHigh(meas:Measurement,p:java ^java.lang.Double)
{
	Measurement.co(meas,co);
	check(SmarthomeHelper.gt5000
	(co)
	);
	p==eval(SmarthomeHelper.gt5000Confidence
	(co)
	);
}
 pattern fireWarning(co:Measurement,event: java Event){
	find ua_fireWarning(co,_);
	event == OR find ua_fireWarning(co,#_);
}
private pattern ua_fireWarning(co:Measurement,event: java Event)
{
	Home.measurements(home,co);
	find use_coHigh(co,_,event0);
	Measurement.time(co,cotime);
	find tempWarning(home,m4,event1);
	Measurement.time(m4,twtime);
	check(SmarthomeHelper.within5s
	(cotime,twtime)
	);
	event==eval(D.AND(event0,event1));
}
 pattern nobodyHome(m:Measurement,event: java Event){
	find ua_nobodyHome(m,_);
	event == OR find ua_nobodyHome(m,#_);
}
private pattern ua_nobodyHome(m:Measurement,event: java Event)
{
	find atHome(m,p);
	event == NOT find use_personBE(p,_,#_);
} or 
{
	neg find atHome(m,_);
	TraceModel.mddTrue(_, event);
}
private  pattern atHome(m:Measurement,p:Person)
{
	Measurement.athome(m,p);
}
 pattern personBE(person:Person,p:EDouble)
{
	Person.confidence(person,p);
}
 pattern call(measurement:Measurement,event: java Event){
	find ua_call(measurement,_);
	event == OR find ua_call(measurement,#_);
}
private pattern ua_call(measurement:Measurement,event: java Event)
{
	find fireWarning(measurement,event0);
	find nobodyHome(measurement,event1);
	event==eval(D.AND(event0,event1));
}
 pattern callProbability(measurement:Measurement,p:java ^java.lang.Double)
{
	collectionOf_p == COLLECT find call(measurement,#_);
	TraceModel.probabilities(_,internal_probabilities);
	//Cast: to avoid a false error indication in eclipse
	p == eval(D.WeightCollection(collectionOf_p as MddHandleCollection, [cnt | hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper.P(cnt)], internal_probabilities));
}

/**
 * Event require pattern
 */
pattern BERequiredName1(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName1_many(arg1,name, index, _);
	probability == max find BERequiredName1_many(arg1,name, index, #_);
}

pattern BERequiredName1_many(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find incrementbase(arg1);
	probability == 0.925;
	name == "incrementbase";
	index == 1;
} or 
{
	find warningbase(arg1);
	probability == 0.925;
	name == "warningbase";
	index == 1;
} or 
{
	find coHigh(arg1,probability);
	name == "coHigh";
	index == 1;
} or 
{
	find personBE(arg1,probability);
	name == "personBE";
	index == 1;
}
pattern BERequiredName2(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName2_many(arg1, arg2,name, index, _);
	probability == max find BERequiredName2_many(arg1, arg2,name, index, #_);
}

pattern BERequiredName2_many(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find tempIncrBE(arg1,arg2,probability);
	name == "tempIncrBE";
	index == 1;
}

private pattern use_tempIncrBE(m1:Measurement,m2:Measurement,p:java ^java.lang.Double, event: java Event){
	//find tempIncrBE(m1,m2,p);
	find HandleOf2(m1,m2,"tempIncrBE",event);
	find BETrace2(m1,m2,"tempIncrBE",1,trace);
	Trace.probability(trace,p);
	 
}
private pattern use_incrementbase(h:Smarthome, event: java Event){
	//find incrementbase(h);
	find HandleOf1(h,"incrementbase",event);
	 
}
private pattern use_warningbase(h:Smarthome, event: java Event){
	//find warningbase(h);
	find HandleOf1(h,"warningbase",event);
	 
}
private pattern use_coHigh(meas:Measurement,p:java ^java.lang.Double, event: java Event){
	//find coHigh(meas,p);
	find HandleOf1(meas,"coHigh",event);
	find BETrace1(meas,"coHigh",1,trace);
	Trace.probability(trace,p);
	 
}
private pattern use_personBE(person:Person,p:EDouble, event: java Event){
	//find personBE(person,p);
	find HandleOf1(person,"personBE",event);
	find BETrace1(person,"personBE",1,trace);
	Trace.probability(trace,p);
	 
}

/**
 * Interface queries for event management
 */
pattern BETrace1(arg1:EObject, name: EString, index: EInt, trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion1(arg1:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName1(arg1, name, to, probability);
	neg find BETrace1(arg1, name, _, _);
	from == 0;
} or {
	find BERequiredName1(arg1, name, to, probability);
	find BETrace1(arg1, name, _, _);
	from == max find BETrace1(arg1, name, #_, _);
	check(to > from);
}

pattern Removal1(trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	neg find BERequiredName1(arg1, name, _, _);
} or {
	find BERequiredName1(arg1, name, multiplicity, _);
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update1(trace: Trace1, probability: java Double){
	find BERequiredName1(arg1, name, multiplicity, probability);
	find BETrace1(arg1, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf1(arg1:EObject, name: EString, event: Handle){
	find BETrace1(arg1, name, _, trace);
	Trace.event(trace, event);
}
pattern BETrace2(arg1:EObject, arg2:EObject, name: EString, index: EInt, trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion2(arg1:EObject, arg2:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName2(arg1, arg2, name, to, probability);
	neg find BETrace2(arg1, arg2, name, _, _);
	from == 0;
} or {
	find BERequiredName2(arg1, arg2, name, to, probability);
	find BETrace2(arg1, arg2, name, _, _);
	from == max find BETrace2(arg1, arg2, name, #_, _);
	check(to > from);
}

pattern Removal2(trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	neg find BERequiredName2(arg1, arg2, name, _, _);
} or {
	find BERequiredName2(arg1, arg2, name, multiplicity, _);
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update2(trace: Trace2, probability: java Double){
	find BERequiredName2(arg1, arg2, name, multiplicity, probability);
	find BETrace2(arg1, arg2, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf2(arg1:EObject, arg2:EObject, name: EString, event: Handle){
	find BETrace2(arg1, arg2, name, _, trace);
	Trace.event(trace, event);
}



[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - Queries /**
 * Imports for stochastic queries
 */
import "http://www.eclipse.org/emf/2002/Ecore"
import "http://www.example.org/tracemodel"

import java reliability.mdd.COLLECT;
import java reliability.mdd.OR;
import java reliability.mdd.NOT;
import java reliability.intreface.D;
import java hu.bme.mit.delta.mdd.MddHandle; 
import java reliability.mdd.MddHandleCollection;
import java reliability.events.Event;

/**
 * Imports for weight functions
 */
import java hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper

/**
 * Imports from the original model
 */
import "http://www.example.org/smarthome"
import "http://www.eclipse.org/emf/2002/Ecore"

import java hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper
/**
 * User defined patterns
 */
 pattern tempIncr(measurement:Measurement,time:UReal,event: java Event){
	find ua_tempIncr(measurement,time,_);
	event == OR find ua_tempIncr(measurement,time,#_);
}
private pattern ua_tempIncr(measurement:Measurement,time:UReal,event: java Event)
{
	find use_tempIncrBE(_,measurement,_,event0);
	Measurement.time(measurement,time);
	find use_incrementbase(_,event1);
	event==eval(D.AND(event0,event1));
}
 pattern tempIncrBE(m1:Measurement,m2:Measurement,p:java ^java.lang.Double)
{
	Home.measurements(home,m1);
	Home.measurements(home,m2);
	Measurement.time(m1,ti1);
	Measurement.time(m2,ti2);
	Measurement.temp(m1,te1);
	Measurement.temp(m2,te2);
	check(SmarthomeHelper.incrementable
	(te1,ti1,te2,ti2)
	);
	p==eval(SmarthomeHelper.incrementConfidence
	(te1,ti1,te2,ti2)
	);
}
 pattern incrementbase(h:Smarthome)
{
	Smarthome(h);
}
 pattern tempWarning(home:Home,m4:Measurement,event: java Event){
	find ua_tempWarning(home,m4,_);
	event == OR find ua_tempWarning(home,m4,#_);
}
private pattern ua_tempWarning(home:Home,m4:Measurement,event: java Event)
{
	find fourWarning(home,m1,m2,m3,m4);
	find tempIncr(m1,_,event0);
	find tempIncr(m2,_,event1);
	find tempIncr(m3,_,event2);
	find tempIncr(m4,_,event3);
	find use_warningbase(_,event4);
	event==eval(D.AND(event0,event1,event2,event3,event4));
}
 pattern fourWarning(home:Home,m1:Measurement,m2:Measurement,m3:Measurement,m4:Measurement)
{
	find incrementAfter3(m1,m2,m3);
	find incrementAfter2(m3,m4);
	Measurement.time(m1,t1);
	Measurement.time(m4,t4);
	Home.measurements(home,m4);
	check(SmarthomeHelper.within5m
	(t1,t4)
	);
}
 pattern incrementAfter3(m1:Measurement,m2:Measurement,m3:Measurement)
{
	find incrementAfter2(m1,m2);
	find incrementAfter2(m2,m3);
	Measurement.time(m1,t1);
	Measurement.time(m3,t3);
	check(SmarthomeHelper.within5m
	(t1,t3)
	);
}
 pattern incrementAfter2(m1:Measurement,m2:Measurement)
{
	Home.measurements(home,m1);
	Home.measurements(home,m2);
	Measurement.time(m1,t1);
	Measurement.time(m2,t2);
	find use_tempIncrBE(_,m1,_,_);
	find use_tempIncrBE(_,m2,_,_);
	m1!=m2;
	check(SmarthomeHelper.after
	(t1,t2)
	);
	check(SmarthomeHelper.within5m
	(t1,t2)
	);
}
 pattern warningbase(h:Smarthome)
{
	Smarthome(h);
}
 pattern coHigh(meas:Measurement,p:java ^java.lang.Double)
{
	Measurement.co(meas,co);
	check(SmarthomeHelper.gt5000
	(co)
	);
	p==eval(SmarthomeHelper.gt5000Confidence
	(co)
	);
}
 pattern fireWarning(co:Measurement,event: java Event){
	find ua_fireWarning(co,_);
	event == OR find ua_fireWarning(co,#_);
}
private pattern ua_fireWarning(co:Measurement,event: java Event)
{
	Home.measurements(home,co);
	find use_coHigh(co,_,event0);
	Measurement.time(co,cotime);
	find tempWarning(home,m4,event1);
	Measurement.time(m4,twtime);
	check(SmarthomeHelper.within5s
	(cotime,twtime)
	);
	event==eval(D.AND(event0,event1));
}
 pattern nobodyHome(m:Measurement,event: java Event){
	find ua_nobodyHome(m,_);
	event == OR find ua_nobodyHome(m,#_);
}
private pattern ua_nobodyHome(m:Measurement,event: java Event)
{
	find atHome(m,p);
	event == NOT find use_personBE(p,_,#_);
} or 
{
	neg find atHome(m,_);
	TraceModel.mddTrue(_, event);
}
private  pattern atHome(m:Measurement,p:Person)
{
	Measurement.athome(m,p);
}
 pattern personBE(person:Person,p:EDouble)
{
	Person.confidence(person,p);
}
 pattern call(measurement:Measurement,event: java Event){
	find ua_call(measurement,_);
	event == OR find ua_call(measurement,#_);
}
private pattern ua_call(measurement:Measurement,event: java Event)
{
	find fireWarning(measurement,event0);
	find nobodyHome(measurement,event1);
	event==eval(D.AND(event0,event1));
}
 pattern callProbability(measurement:Measurement,p:java ^java.lang.Double)
{
	collectionOf_p == COLLECT find call(measurement,#_);
	TraceModel.probabilities(_,internal_probabilities);
	//Cast: to avoid a false error indication in eclipse
	p == eval(D.WeightCollection(collectionOf_p as MddHandleCollection, [cnt | hu.bme.mit.inf.dslreasoner.domains.smarthome.utilities.SmarthomeHelper.P(cnt)], internal_probabilities));
}

/**
 * Event require pattern
 */
pattern BERequiredName1(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName1_many(arg1,name, index, _);
	probability == max find BERequiredName1_many(arg1,name, index, #_);
}

pattern BERequiredName1_many(arg1:EObject,name: java String, index: java Integer, probability: java Double)
{
	find incrementbase(arg1);
	probability == 0.925;
	name == "incrementbase";
	index == 1;
} or 
{
	find warningbase(arg1);
	probability == 0.925;
	name == "warningbase";
	index == 1;
} or 
{
	find coHigh(arg1,probability);
	name == "coHigh";
	index == 1;
} or 
{
	find personBE(arg1,probability);
	name == "personBE";
	index == 1;
}
pattern BERequiredName2(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find BERequiredName2_many(arg1, arg2,name, index, _);
	probability == max find BERequiredName2_many(arg1, arg2,name, index, #_);
}

pattern BERequiredName2_many(arg1:EObject, arg2:EObject,name: java String, index: java Integer, probability: java Double)
{
	find tempIncrBE(arg1,arg2,probability);
	name == "tempIncrBE";
	index == 1;
}

private pattern use_tempIncrBE(m1:Measurement,m2:Measurement,p:java ^java.lang.Double, event: java Event){
	//find tempIncrBE(m1,m2,p);
	find HandleOf2(m1,m2,"tempIncrBE",event);
	find BETrace2(m1,m2,"tempIncrBE",1,trace);
	Trace.probability(trace,p);
	 
}
private pattern use_incrementbase(h:Smarthome, event: java Event){
	//find incrementbase(h);
	find HandleOf1(h,"incrementbase",event);
	 
}
private pattern use_warningbase(h:Smarthome, event: java Event){
	//find warningbase(h);
	find HandleOf1(h,"warningbase",event);
	 
}
private pattern use_coHigh(meas:Measurement,p:java ^java.lang.Double, event: java Event){
	//find coHigh(meas,p);
	find HandleOf1(meas,"coHigh",event);
	find BETrace1(meas,"coHigh",1,trace);
	Trace.probability(trace,p);
	 
}
private pattern use_personBE(person:Person,p:EDouble, event: java Event){
	//find personBE(person,p);
	find HandleOf1(person,"personBE",event);
	find BETrace1(person,"personBE",1,trace);
	Trace.probability(trace,p);
	 
}

/**
 * Interface queries for event management
 */
pattern BETrace1(arg1:EObject, name: EString, index: EInt, trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion1(arg1:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName1(arg1, name, to, probability);
	neg find BETrace1(arg1, name, _, _);
	from == 0;
} or {
	find BERequiredName1(arg1, name, to, probability);
	find BETrace1(arg1, name, _, _);
	from == max find BETrace1(arg1, name, #_, _);
	check(to > from);
}

pattern Removal1(trace: Trace1){
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	neg find BERequiredName1(arg1, name, _, _);
} or {
	find BERequiredName1(arg1, name, multiplicity, _);
	Trace1.arg1(trace, arg1);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update1(trace: Trace1, probability: java Double){
	find BERequiredName1(arg1, name, multiplicity, probability);
	find BETrace1(arg1, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf1(arg1:EObject, name: EString, event: Handle){
	find BETrace1(arg1, name, _, trace);
	Trace.event(trace, event);
}
pattern BETrace2(arg1:EObject, arg2:EObject, name: EString, index: EInt, trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, index);
}

pattern Insertion2(arg1:EObject, arg2:EObject, name: java String, from: java Integer, to: java Integer, probability: java Double){
	find BERequiredName2(arg1, arg2, name, to, probability);
	neg find BETrace2(arg1, arg2, name, _, _);
	from == 0;
} or {
	find BERequiredName2(arg1, arg2, name, to, probability);
	find BETrace2(arg1, arg2, name, _, _);
	from == max find BETrace2(arg1, arg2, name, #_, _);
	check(to > from);
}

pattern Removal2(trace: Trace2){
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	neg find BERequiredName2(arg1, arg2, name, _, _);
} or {
	find BERequiredName2(arg1, arg2, name, multiplicity, _);
	Trace2.arg1(trace, arg1);
	Trace2.arg2(trace, arg2);
	Trace.generator(trace, name);
	Trace.index(trace, idx);
	check(idx > multiplicity);
}

pattern Update2(trace: Trace2, probability: java Double){
	find BERequiredName2(arg1, arg2, name, multiplicity, probability);
	find BETrace2(arg1, arg2, name, index, trace);
	Trace.probability(trace, old);
	old != probability;
	check(index <= multiplicity);
}

pattern HandleOf2(arg1:EObject, arg2:EObject, name: EString, event: Handle){
	find BETrace2(arg1, arg2, name, _, trace);
	Trace.event(trace, event);
}



[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 0 (1 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 795.894823ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2160.568552ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1565.946656ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 1 (2 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 226.197424ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1915.6652609999999ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1797.108089ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 2 (3 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 148.233413ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 3 (4 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 163.94525399999998ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 4 (5 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 164.2872ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 5 (6 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 123.760856ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 6 (7 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 157.43946ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 7 (8 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 158.154369ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 8 (9 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 190.10445800000002ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 9 (10 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 105.76247199999999ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 10 (11 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 124.651486ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 11 (12 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 108.090339ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 12 (13 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 159.141534ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 13 (14 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 157.83629399999998ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 14 (15 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 187.468223ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 15 (16 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 162.17672399999998ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 16 (17 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 154.686218ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 17 (18 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 117.590685ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 18 (19 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 99.258011ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 19 (20 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 143.23037599999998ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [WARMUP 20 (21 of 21) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 103.886944ms
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.trafo[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.evaluation[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. storm.healthy
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. problog.exitcode
prefix,size,run,iteration,incremental.total[ms],incremental.result,incremental.sync[ms],incremental.prop[ms],incremental.timeout,standalone.total[ms],standalone.result,standalone.sync[ms],standalone.prop[ms],standalone.timeout,problog.total[ms],problog.result,problog.trafo[ms],problog.evaluation[ms],problog.timeout,storm.total[ms],storm.result,storm.trafo[ms],storm.evaluation[ms],storm.timeout,incremental.healthy,standalone.healthy,storm.healthy,problog.exitcode
SH,100,0,0,795.894823,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	}
	]
}
",103.29794899999999,160.474165,false,,,,,,2160.568552,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",18.367518,2142.201034,false,1565.946656,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		}
	]
}
",39.782878,1526.163778,false,true,,true,0
SH,100,1,0,226.197424,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	}
	]
}
",13.598329,31.463995,false,,,,,,1915.6652609999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",8.082693,1907.582568,false,1797.108089,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",33.705722,1763.4023670000001,false,true,,true,0
SH,100,2,0,148.233413,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	}
	]
}
",8.073846999999999,19.097913000000002,false,,,,,,,,,,,,,,,,true,,,
SH,100,3,0,163.94525399999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	}
	]
}
",11.014439,21.766257000000003,false,,,,,,,,,,,,,,,,true,,,
SH,100,4,0,164.2872,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992041
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",5.884536,17.118934,false,,,,,,,,,,,,,,,,true,,,
SH,100,5,0,123.760856,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	}
	]
}
",5.3715150000000005,14.262088,false,,,,,,,,,,,,,,,,true,,,
SH,100,6,0,157.43946,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	}
	]
}
",5.230499,13.370790000000001,false,,,,,,,,,,,,,,,,true,,,
SH,100,7,0,158.154369,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	}
	]
}
",5.322902,13.177700999999999,false,,,,,,,,,,,,,,,,true,,,
SH,100,8,0,190.10445800000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",5.568963,14.805512,false,,,,,,,,,,,,,,,,true,,,
SH,100,9,0,105.76247199999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	}
	]
}
",4.966593,10.733807,false,,,,,,,,,,,,,,,,true,,,
SH,100,10,0,124.651486,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",4.113004,10.022535,false,,,,,,,,,,,,,,,,true,,,
SH,100,11,0,108.090339,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992044
	}
	]
}
",4.628591999999999,11.036877,false,,,,,,,,,,,,,,,,true,,,
SH,100,12,0,159.141534,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	}
	]
}
",8.85312,14.294413,false,,,,,,,,,,,,,,,,true,,,
SH,100,13,0,157.83629399999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234404
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",4.385233,11.508803,false,,,,,,,,,,,,,,,,true,,,
SH,100,14,0,187.468223,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	}
	]
}
",6.421367,22.515651000000002,false,,,,,,,,,,,,,,,,true,,,
SH,100,15,0,162.17672399999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	}
	]
}
",4.033451,15.21519,false,,,,,,,,,,,,,,,,true,,,
SH,100,16,0,154.686218,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.242787999999999,11.715095999999999,false,,,,,,,,,,,,,,,,true,,,
SH,100,17,0,117.590685,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.794092,10.236013000000002,false,,,,,,,,,,,,,,,,true,,,
SH,100,18,0,99.258011,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	}
	]
}
",4.290494,10.366691999999999,false,,,,,,,,,,,,,,,,true,,,
SH,100,19,0,143.23037599999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.2038530000000005,9.778189000000001,false,,,,,,,,,,,,,,,,true,,,
SH,100,20,0,103.886944,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188046
	}
	]
}
",3.420324,11.767494000000001,false,,,,,,,,,,,,,,,,true,,,
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 0 (1 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 139.328805ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2069.630955ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1648.242883ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 1 (2 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 132.202533ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 3123.349003ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2266.947566ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 2 (3 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 137.43025599999999ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1925.454412ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1606.840001ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 3 (4 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 218.039009ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2924.869312ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1573.736016ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 4 (5 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 106.583833ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2091.717573ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1817.9768239999999ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 5 (6 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 149.963818ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1896.203759ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1518.2655790000001ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 6 (7 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 118.27755499999999ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1878.789246ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1434.9788079999996ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 7 (8 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 114.26959699999999ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1922.142661ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1488.180303ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 8 (9 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 106.795313ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2062.346688ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1587.6851430000002ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 9 (10 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 107.85103500000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1868.26203ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1604.862853ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 10 (11 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 138.50489100000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1837.714855ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1575.392835ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 11 (12 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 118.793363ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1848.843095ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1458.586088ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 12 (13 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 141.583324ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2007.710904ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1734.5857010000002ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 13 (14 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 107.75355400000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1864.478244ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1523.5569689999998ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 14 (15 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 142.491105ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2225.961273ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1655.7872750000004ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 15 (16 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 118.523916ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1924.9972ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1537.5218780000002ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 16 (17 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 105.952783ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1893.572412ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1790.899267ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 17 (18 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 111.572814ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1923.681165ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1521.169055ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 18 (19 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 134.96504099999999ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2036.3686240000002ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1958.7875919999997ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 19 (20 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 139.154986ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2036.019859ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1562.384738ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 20 (21 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 144.09207800000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2237.478395ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1692.6499529999999ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 21 (22 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 168.34738099999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2053.733094ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 5175.681009ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 22 (23 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 171.91863899999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 3193.36467ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1677.7273250000003ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 23 (24 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 118.65848600000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2331.406903ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1830.9755949999999ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 24 (25 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 109.61260300000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2166.3471680000002ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1726.105869ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 25 (26 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 129.130127ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2230.996994ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2090.7284110000005ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 26 (27 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 105.040232ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2194.5083489999997ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1828.214845ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 27 (28 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 150.272332ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2262.4995049999998ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1845.5737550000001ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 28 (29 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 97.895415ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2351.696482ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1761.8406700000003ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 29 (30 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 141.290857ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2334.240384ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2185.520981ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 30 (31 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 112.422961ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 3601.229617ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 3454.127721ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 31 (32 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 326.504467ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 6673.05891ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 15784.901901ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 32 (33 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 253.73514600000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 5437.608485999999ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2018.60776ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 33 (34 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 164.393461ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2114.120153ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 3108.054048ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 34 (35 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 133.18873499999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1916.120158ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1496.2670119999998ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 35 (36 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 93.206519ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1990.313902ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1776.3355880000001ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 36 (37 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 134.258723ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2451.8792439999997ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1726.038585ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 37 (38 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 109.773103ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1925.622526ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2747.426084ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 38 (39 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 130.59747199999998ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2122.19169ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1745.1575730000002ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 39 (40 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 148.98534700000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1948.921197ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1610.0603540000002ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 40 (41 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 109.553633ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2004.990845ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1881.4986799999997ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 41 (42 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 92.96443ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2088.846297ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2089.435632ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 42 (43 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 214.162161ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1947.231845ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1680.251089ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 43 (44 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 152.94667900000002ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2017.0047439999998ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1526.4080669999998ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 44 (45 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 103.886195ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1909.953814ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1679.16485ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 45 (46 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 115.80894500000001ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2177.618632ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1506.375424ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 46 (47 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 146.620941ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 1965.16226ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2078.540519ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 47 (48 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 144.741841ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2473.2385529999997ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 2243.663075ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 48 (49 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 100.80368399999999ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2022.761371ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1508.502218ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
[main] INFO hu.bme.mit.inf.measurement.utilities.viatra.ViatraScaleRunner - [MEASURE 49 (50 of 50) ]===============================================================
[main] INFO reliability.mdd.MddModel - Removed 0
[main] INFO reliability.mdd.MddModel - Updated 0
[main] INFO reliability.mdd.MddModel - Insertions 109
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.viatra.SmarthomeScaleRunner - Viatra completed in 135.424431ms
[main] INFO hu.bme.mit.inf.dslreasoner.domains.smarthome.problog.ProblogSmarthomeUtil - ProbLog completed in 2123.732369ms with result #8 (timeout: false)
[main] INFO se.liu.ida.sas.pelab.smarthome.storm.StormSmarthomeUtil - Storm completed in 1776.4757260000001ms with result #8 (timeout: false, healthy: true)
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.total[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.result
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.sync[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.prop[ms]
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.timeout
[main] WARN hu.bme.mit.inf.measurement.utilities.CSVLog - Missing entry for key. standalone.healthy
prefix,size,run,iteration,incremental.total[ms],incremental.result,incremental.sync[ms],incremental.prop[ms],incremental.timeout,standalone.total[ms],standalone.result,standalone.sync[ms],standalone.prop[ms],standalone.timeout,problog.total[ms],problog.result,problog.trafo[ms],problog.evaluation[ms],problog.timeout,storm.total[ms],storm.result,storm.trafo[ms],storm.evaluation[ms],storm.timeout,incremental.healthy,standalone.healthy,storm.healthy,problog.exitcode
SH,100,0,0,139.328805,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188049
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590453
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992044
	}
	]
}
",3.4112460000000002,9.198647999999999,false,,,,,,2069.630955,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",9.234328999999999,2060.3966259999997,false,1648.242883,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",32.588353000000005,1615.6545299999998,false,true,,true,0
SH,100,1,0,132.202533,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.817222,10.894012,false,,,,,,3123.349003,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",5.902026,3117.446977,false,2266.947566,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		}
	]
}
",53.361267,2213.586299,false,true,,true,0
SH,100,2,0,137.43025599999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.887104,8.879251,false,,,,,,1925.454412,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.267946,1920.186466,false,1606.840001,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",33.425551,1573.41445,false,true,,true,0
SH,100,3,0,218.039009,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",7.370451,14.27239,false,,,,,,2924.869312,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",7.051457,2917.817855,false,1573.736016,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.237463,1544.4985530000001,false,true,,true,0
SH,100,4,0,106.583833,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.8766480000000003,11.032767,false,,,,,,2091.717573,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",5.184759,2086.532814,false,1817.9768239999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",35.546052,1782.430772,false,true,,true,0
SH,100,5,0,149.963818,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.7212359999999998,9.378859,false,,,,,,1896.203759,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",4.769042000000001,1891.4347169999999,false,1518.2655790000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.197768999999997,1489.06781,false,true,,true,0
SH,100,6,0,118.27755499999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590453
	}
	]
}
",3.370089,11.10635,false,,,,,,1878.789246,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.62222,1873.167026,false,1434.9788079999996,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",28.49372,1406.4850879999997,false,true,,true,0
SH,100,7,0,114.26959699999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188046
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.82306,10.765528,false,,,,,,1922.142661,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.609117,1916.533544,false,1488.180303,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.286848,1457.8934550000001,false,true,,true,0
SH,100,8,0,106.795313,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.703732,8.737784,false,,,,,,2062.346688,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",4.914683,2057.4320049999997,false,1587.6851430000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",55.149557,1532.5355860000002,false,true,,true,0
SH,100,9,0,107.85103500000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.668034,8.869674999999999,false,,,,,,1868.26203,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",4.899924,1863.3621059999998,false,1604.862853,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.577888,1575.284965,false,true,,true,0
SH,100,10,0,138.50489100000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.417249,9.553584,false,,,,,,1837.714855,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",5.231472,1832.483383,false,1575.392835,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.182528,1545.210307,false,true,,true,0
SH,100,11,0,118.793363,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.348164,11.366477000000001,false,,,,,,1848.843095,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",6.821549,1842.0215460000002,false,1458.586088,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		}
	]
}
",31.255626,1427.3304620000001,false,true,,true,0
SH,100,12,0,141.583324,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",3.705431,8.830096,false,,,,,,2007.710904,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",5.738328,2001.972576,false,1734.5857010000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",31.512077999999995,1703.0736230000002,false,true,,true,0
SH,100,13,0,107.75355400000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	}
	]
}
",3.599795,9.974981,false,,,,,,1864.478244,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",4.894434,1859.58381,false,1523.5569689999998,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",28.757858,1494.7991109999998,false,true,,true,0
SH,100,14,0,142.491105,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.503032,13.830066,false,,,,,,2225.961273,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.944726999999999,2221.0165460000003,false,1655.7872750000004,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		}
	]
}
",31.144743,1624.6425320000003,false,true,,true,0
SH,100,15,0,118.523916,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",3.822233,13.340238,false,,,,,,1924.9972,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.85754,1919.1396599999998,false,1537.5218780000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.417477999999996,1508.1044000000002,false,true,,true,0
SH,100,16,0,105.952783,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590453
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	}
	]
}
",3.2729079999999997,10.801358,false,,,,,,1893.572412,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.86179,1887.710622,false,1790.899267,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",30.122652,1760.776615,false,true,,true,0
SH,100,17,0,111.572814,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",4.177175,10.470756,false,,,,,,1923.681165,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",5.0072,1918.6739650000002,false,1521.169055,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.252436999999997,1491.916618,false,true,,true,0
SH,100,18,0,134.96504099999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.951997,8.912735000000001,false,,,,,,2036.3686240000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",4.728629,2031.639995,false,1958.7875919999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		}
	]
}
",36.941100999999996,1921.8464909999998,false,true,,true,0
SH,100,19,0,139.154986,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",4.915278,9.206295,false,,,,,,2036.019859,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.231764,2030.7880949999999,false,1562.384738,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",28.492120999999997,1533.892617,false,true,,true,0
SH,100,20,0,144.09207800000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	}
	]
}
",3.908243,10.400006,false,,,,,,2237.478395,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",5.721447,2231.7569479999997,false,1692.6499529999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.567868999999998,1662.082084,false,true,,true,0
SH,100,21,0,168.34738099999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	}
	]
}
",3.911458,10.344273,false,,,,,,2053.733094,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",4.605572,2049.127522,false,5175.681009,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		}
	]
}
",46.187650000000005,5129.493359,false,true,,true,0
SH,100,22,0,171.91863899999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	}
	]
}
",8.148733,15.305501,false,,,,,,3193.36467,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",5.851488000000001,3187.513182,false,1677.7273250000003,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",30.158237,1647.5690880000002,false,true,,true,0
SH,100,23,0,118.65848600000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	}
	]
}
",3.876296,13.765683999999998,false,,,,,,2331.406903,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",6.946566,2324.460337,false,1830.9755949999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",37.508089,1793.467506,false,true,,true,0
SH,100,24,0,109.61260300000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590453
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	}
	]
}
",3.374077,10.319469,false,,,,,,2166.3471680000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",4.69068,2161.656488,false,1726.105869,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",32.057006,1694.048863,false,true,,true,0
SH,100,25,0,129.130127,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188046
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.714023,10.491168,false,,,,,,2230.996994,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.037586,2225.9594079999997,false,2090.7284110000005,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",36.688632999999996,2054.0397780000003,false,true,,true,0
SH,100,26,0,105.040232,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188049
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.735031,8.955634,false,,,,,,2194.5083489999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.545006,2189.963343,false,1828.214845,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		}
	]
}
",30.544858,1797.669987,false,true,,true,0
SH,100,27,0,150.272332,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.04342,10.963471,false,,,,,,2262.4995049999998,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",4.715859999999999,2257.783645,false,1845.5737550000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",32.053945999999996,1813.5198090000001,false,true,,true,0
SH,100,28,0,97.895415,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.447412,10.649697,false,,,,,,2351.696482,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",6.243185,2345.4532969999996,false,1761.8406700000003,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		}
	]
}
",27.100566,1734.7401040000002,false,true,,true,0
SH,100,29,0,141.290857,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.465065,8.288782999999999,false,,,,,,2334.240384,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",6.139475,2328.100909,false,2185.520981,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",40.00132,2145.5196610000003,false,true,,true,0
SH,100,30,0,112.422961,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590453
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.823455,12.689770000000001,false,,,,,,3601.229617,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		}
	]
}
",10.159414,3591.070203,false,3454.127721,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",73.594551,3380.5331699999997,false,true,,true,0
SH,100,31,0,326.504467,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	}
	]
}
",23.726153999999998,28.357553,false,,,,,,6673.05891,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",101.95482000000001,6571.10409,false,15784.901901,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",796.694146,14988.207755,false,true,,true,0
SH,100,32,0,253.73514600000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	}
	]
}
",17.264235,22.080133,false,,,,,,5437.608485999999,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",11.479417,5426.1290690000005,false,2018.60776,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",37.739481,1980.868279,false,true,,true,0
SH,100,33,0,164.393461,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992041
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.992481,10.103337999999999,false,,,,,,2114.120153,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.244555,2108.875598,false,3108.054048,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		}
	]
}
",55.497057999999996,3052.55699,false,true,,true,0
SH,100,34,0,133.18873499999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.050176,10.455573000000001,false,,,,,,1916.120158,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.851564000000001,1911.2685940000001,false,1496.2670119999998,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",28.226976,1468.0400359999999,false,true,,true,0
SH,100,35,0,93.206519,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188046
	}
	]
}
",3.463732,9.478114,false,,,,,,1990.313902,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.981138,1985.332764,false,1776.3355880000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.8231,1745.512488,false,true,,true,0
SH,100,36,0,134.258723,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	}
	]
}
",3.1923719999999998,8.026978,false,,,,,,2451.8792439999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.706201,2446.1730430000002,false,1726.038585,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",36.152815,1689.88577,false,true,,true,0
SH,100,37,0,109.773103,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234404
	}
	]
}
",3.706281,9.39082,false,,,,,,1925.622526,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.038111,1920.584415,false,2747.426084,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",47.606278,2699.819806,false,true,,true,0
SH,100,38,0,130.59747199999998,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	}
	]
}
",3.888924,8.156592,false,,,,,,2122.19169,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.518708999999999,2117.672981,false,1745.1575730000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		}
	]
}
",30.367808999999998,1714.789764,false,true,,true,0
SH,100,39,0,148.98534700000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	}
	]
}
",4.469646,13.786273,false,,,,,,1948.921197,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		}
	]
}
",5.56199,1943.359207,false,1610.0603540000002,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.910686999999996,1580.1496670000001,false,true,,true,0
SH,100,40,0,109.553633,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",4.850403,8.243106,false,,,,,,2004.990845,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.05663,1999.934215,false,1881.4986799999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		}
	]
}
",31.609820000000003,1849.8888599999998,false,true,,true,0
SH,100,41,0,92.96443,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.0444560000000003,8.502438,false,,,,,,2088.846297,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.9783599999999995,2082.867937,false,2089.435632,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",33.565141,2055.870491,false,true,,true,0
SH,100,42,0,214.162161,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",5.7146099999999995,15.403545,false,,,,,,1947.231845,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.103434,1942.1284110000001,false,1680.251089,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",31.250099000000002,1649.00099,false,true,,true,0
SH,100,43,0,152.94667900000002,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	}
	]
}
",3.147694,13.133338,false,,,,,,2017.0047439999998,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",6.341194000000001,2010.66355,false,1526.4080669999998,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.282017,1496.1260499999999,false,true,,true,0
SH,100,44,0,103.886195,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234405
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	}
	]
}
",2.979369,8.13534,false,,,,,,1909.953814,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",5.495971,1904.4578430000001,false,1679.16485,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",29.740836,1649.424014,false,true,,true,0
SH,100,45,0,115.80894500000001,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590448
	}
	]
}
",3.77386,12.949596,false,,,,,,2177.618632,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		}
	]
}
",4.720752999999999,2172.897879,false,1506.375424,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.490624999999998,1475.8847990000002,false,true,,true,0
SH,100,46,0,146.620941,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",3.075942,10.282191000000001,false,,,,,,1965.16226,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		}
	]
}
",5.3833,1959.7789599999999,false,2078.540519,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		}
	]
}
",40.760066,2037.780453,false,true,,true,0
SH,100,47,0,144.741841,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188048
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	}
	]
}
",3.971319,14.700496999999999,false,,,,,,2473.2385529999997,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		}
	]
}
",7.14169,2466.0968629999998,false,2243.663075,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		}
	]
}
",41.026436999999994,2202.636638,false,true,,true,0
SH,100,48,0,100.80368399999999,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234406
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.09458224455590451
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992042
	}
	]
}
",2.864792,12.139719,false,,,,,,2022.761371,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		}
	]
}
",5.322387,2017.438984,false,1508.502218,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		}
	]
}
",30.577224,1477.924994,false,true,,true,0
SH,100,49,0,135.424431,"{
	""valid"" : true,
	""matches"" : [
	{
		""measurement"" : ""measurement87"",
		""probability"" : 0.7881853705188047
	},
	{
		""measurement"" : ""measurement89"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement39"",
		""probability"" : 0.7881853712992043
	},
	{
		""measurement"" : ""measurement42"",
		""probability"" : 0.0945822445559045
	},
	{
		""measurement"" : ""measurement90"",
		""probability"" : 0.7881853712992044
	},
	{
		""measurement"" : ""measurement93"",
		""probability"" : 0.7881853712992042
	},
	{
		""measurement"" : ""measurement86"",
		""probability"" : 0.7702541052234407
	},
	{
		""measurement"" : ""measurement92"",
		""probability"" : 0.7881853712992043
	}
	]
}
",3.076778,9.497995999999999,false,,,,,,2123.732369,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.094582244555905
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.788185371299205
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.788185370518805
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.770254105223441
		}
	]
}
",4.844649,2118.88772,false,1776.4757260000001,"{
	""valid"" : true,
	""matches"" : [
		{
			""measurement"" : ""measurement42"",
			""probability"" : 0.0945822445559
		},
		{
			""measurement"" : ""measurement92"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement93"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement86"",
			""probability"" : 0.7702541052234
		},
		{
			""measurement"" : ""measurement39"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement89"",
			""probability"" : 0.7881853712992
		},
		{
			""measurement"" : ""measurement87"",
			""probability"" : 0.7881853705188
		},
		{
			""measurement"" : ""measurement90"",
			""probability"" : 0.7881853712992
		}
	]
}
",35.892362,1740.583364,false,true,,true,0
